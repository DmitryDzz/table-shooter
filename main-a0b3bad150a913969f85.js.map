{"version":3,"file":"main-a0b3bad150a913969f85.js","mappings":"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","sources":["webpack://shooter/./src/input/gamepadInput.ts","webpack://shooter/webpack/bootstrap","webpack://shooter/webpack/runtime/define property getters","webpack://shooter/webpack/runtime/get javascript chunk filename","webpack://shooter/webpack/runtime/global","webpack://shooter/webpack/runtime/hasOwnProperty shorthand","webpack://shooter/webpack/runtime/make namespace object","webpack://shooter/webpack/runtime/publicPath","webpack://shooter/webpack/runtime/jsonp chunk loading","webpack://shooter/./src/app.ts"],"sourcesContent":["import {GamepadState, MsgGamepad} from \"../messages\";\n\nexport class GamepadInput {\n    private readonly _worker: Worker;\n\n    constructor(worker: Worker) {\n        this._worker = worker;\n        window.addEventListener(\"gamepadconnected\", this._gamepadConnectedHandler);\n        window.addEventListener(\"gamepaddisconnected\", this._gamepadDisconnectedHandler);\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    dispose() {\n        window.removeEventListener(\"gamepadconnected\", this._gamepadConnectedHandler);\n        window.removeEventListener(\"gamepaddisconnected\", this._gamepadDisconnectedHandler);\n    }\n\n    update() {\n        const message: MsgGamepad = {\n            type: \"gamepad\",\n            payload: {\n                state: this._readGamepads(),\n            },\n        };\n        this._worker.postMessage(message);\n    }\n\n    private _gamepadConnectedHandler = (_ev: GamepadEvent) => {\n        console.info(\"Gamepad connected\");\n    };\n\n    private _gamepadDisconnectedHandler = (_ev: GamepadEvent) => {\n        console.info(\"Gamepad disconnected\");\n    };\n\n    private _readGamepads(): GamepadState {\n        // The first four axes are: moveX, moveZ, lookX, and lookZ.\n        const axes: number[] = [];\n        for (let gamepad of navigator.getGamepads()) {\n            if (gamepad === null) continue;\n            for (let value of gamepad.axes) {\n                axes.push(value);\n                if (axes.length >= 4) break;\n            }\n            if (axes.length >= 4) break;\n        }\n\n        const moveVector = axes.length >= 2\n            ? {x: axes[0], y: 0, z: -axes[1]}\n            : {x: 0, y: 0, z: 0};\n        const lookVector = axes.length >= 4\n            ? {x: axes[2], y: 0, z: -axes[3]}\n            : {x: 0, y: 0, z: 0};\n        return {moveVector, lookVector};\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"main-\" + \"2ed7a19240c4c8ec49ce\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import {MsgInspector, MsgLoad, MsgNextScene, MsgOffscreen, MsgResize} from \"./messages\";\nimport {GamepadInput} from \"./input/gamepadInput\";\n\nclass App {\n    readonly worker: Worker;\n\n    constructor() {\n        console.log(\"%cUnnamed Shooter App\", \"background: lime\");\n\n        // create the canvas html element and attach it to the webpage\n        const canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n        canvas.style.width = \"100%\";\n        canvas.style.height = \"100%\";\n        canvas.id = \"gameCanvas\";\n        document.body.appendChild(canvas);\n\n        if (\"OffscreenCanvas\" in window) {\n            // @ts-ignore\n            const offscreen = canvas.transferControlToOffscreen();\n\n            this.worker = new Worker(new URL('./worker.ts', import.meta.url));\n            const msgOffscreen: MsgOffscreen = {type: \"offscreen\", payload: {canvas: offscreen}};\n            this.worker.postMessage(msgOffscreen, [offscreen]);\n\n            const resizeHandler = () => {\n                const msgResize: MsgResize =\n                    {type: \"resize\", payload: {width: window.innerWidth, height: window.innerHeight}};\n                this.worker.postMessage(msgResize);\n            };\n\n            window.addEventListener(\"resize\", resizeHandler);\n\n            window.addEventListener(\"load\", () => {\n                const msgLoad: MsgLoad = {type: \"loadFirstScene\"};\n                this.worker.postMessage(msgLoad);\n\n                // To update resolution:\n                resizeHandler();\n            });\n\n            window.addEventListener(\"keydown\", async (ev) => {\n                // Hide/show the Inspector:\n                if (!ev.shiftKey && !ev.ctrlKey && !ev.altKey && ev.code === \"KeyI\") {\n                    const msgInspector: MsgInspector = {type: \"inspector\"};\n                    this.worker.postMessage(msgInspector);\n                }\n                // Load next scene:\n                if (!ev.shiftKey && !ev.ctrlKey && !ev.altKey && ev.code === \"KeyN\") {\n                    const msgNextScene: MsgNextScene = {type: \"loadNextScene\"};\n                    this.worker.postMessage(msgNextScene);\n                }\n            });\n        } else {\n            canvas.hidden = true;\n            const div = document.createElement(\"div\");\n            div.innerText = \"Unfortunately your browser doesn't support Offscreen canvas API\"\n            document.body.appendChild(div);\n            return;\n        }\n\n        // window.CANNON = require(\"cannon\");\n\n        // const engine = new Engine(canvas, true, {preserveDrawingBuffer: true, stencil: true});\n        // const sceneSwitcher = new SceneSwitcher(engine, canvas);\n        //\n        // window.addEventListener(\"load\", async () => {\n        //     await sceneSwitcher.loadFirstSceneAsync();\n        // });\n        //\n        // // hide/show the Inspector\n        // window.addEventListener(\"keydown\", async (ev) => {\n        //     const scene = sceneSwitcher.currentScene;\n        //     if (!ev.shiftKey && !ev.ctrlKey && !ev.altKey && ev.code === \"KeyI\") {\n        //         if (scene.debugLayer.isVisible()) {\n        //             scene.debugLayer.hide();\n        //         } else {\n        //             await scene.debugLayer.show({\n        //                 embedMode: false,\n        //                 overlay: true,\n        //             });\n        //         }\n        //     }\n        //\n        //     if (!ev.shiftKey && !ev.ctrlKey && !ev.altKey && ev.code === \"KeyN\") {\n        //         await sceneSwitcher.loadNextSceneAsync();\n        //     }\n        // });\n        //\n        // window.addEventListener(\"resize\", () => {\n        //     canvas.width = window.innerWidth;\n        //     canvas.height = window.innerHeight;\n        //     engine.resize();\n        // });\n        //\n        // // run the main render loop\n        // engine.runRenderLoop(() => {\n        //     sceneSwitcher.currentScene?.render();\n        // });\n    }\n}\n\nconst app = new App();\n\nconst gamepadInput = new GamepadInput(app.worker);\nconst updateHandler = () => {\n    gamepadInput.update();\n    requestAnimationFrame(updateHandler);\n}\nupdateHandler();"],"names":[],"sourceRoot":""}